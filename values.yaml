# #### 全局变量 ####
apiVersion: ""
kind: ""
name: ""
fullname: ""
namespace: ""
annotations:
  # validOnly: false  # 特殊变量，不会出现在结果集中。非全局变量配置时生效（此处不生效）。
  app.example.com: example
  ann: example
labels: {}
helmLabels: false
helmTesting: false
# #### 全局变量 ####

# #### 不同资源的可用变量，可继承、覆盖全局变量 ####
# # CronJob
CronJob:
  helmTesting: false
  helmLabels: true
  name: cronJobTest
  nameAlias: cronJobTestAlias
  fullname: cronJobTestFullName
  schedule: "*/1 * * * *"
  timeZone: "Asia/Shanghai"
  concurrencyPolicy: "Allow"
  matchExpressions:
  # 基于等值 / 不等值
  - environment = production
  - environment1 == production1
  - tier != frontend
  # 基于集合
  - environment2 in (production2, qa2)
  - tier2 notin (frontend2, backend2)
  - partition
  - "!partition1"
  # 原生
  - key: key
    operator: In  # In/NotIn/Exists/DoesNotExist
    values:
    - value1
    - value2
  annotations:
    validOnly: false  # 特殊变量，不会出现在结果集中。非全局变量配置时生效（此处生效）。
    app.example.com: CronJob
    cron: cronJob
  labels:
    xxx: 123
  activeDeadlineSeconds: 10
  automountServiceAccountToken: true
  dnsPolicy: ClusterFirstWithHostNet
  hostname: vm-server-cronjob
  imagePullSecrets:
  - secret1
  - secret2
  - secret3
  nodeName: node-1
  nodeSelector:
    hostname: node-1
  restartPolicy: Always
  schedulerName: default
  serviceAccountName: default
  hostPID: false
  shareProcessNamespace: false
  terminationGracePeriodSeconds: 0
  nodeAffinity:
    required:
      matchExpressions:
      - nodeAffinity1 = 111
      matchFields:
      - nodeAffinity2 = 222
    preferred:
      weight1:
        matchExpressions:
        - nodeAffinity1 = 111
        matchFields:
        - nodeAffinity2 = 222
  podAffinity:
    required:
      topologyKey: kubernetes.io/hostname
      labelSelector:
        matchExpressions:
        - podAffinity1 = 111
        matchLabels:
          podAffinity2: 222
      namespaceSelector:
        matchExpressions:
        - podAffinity3 = 333
        matchLabels:
          podAffinity4: 444
      namespaces:
      - aaa
      - bbb
    preferred:
      weight1:
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
          - podAffinityW1 = W111
          matchLabels:
            podAffinityW2: W222
        namespaceSelector:
          matchExpressions:
          - podAffinityW3 = W333
          matchLabels:
            podAffinityW4: W444
        namespaces:
        - Waaa
        - Wbbb
  podAntiAffinity:
    required:
      topologyKey: kubernetes.io/hostname
      labelSelector:
        matchExpressions:
        - podAntiAffinity1 = 111
        matchLabels:
          podAntiAffinity2: 222
      namespaceSelector:
        matchExpressions:
        - podAntiAffinity3 = 333
        matchLabels:
          podAntiAffinity4: 444
      namespaces:
      - Antiaaa
      - Antibbb
    preferred:
      weight1:
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
          - podAntiAffinityW1 = W111
          matchLabels:
            podAntiAffinityW2: W222
        namespaceSelector:
          matchExpressions:
          - podAntiAffinityW3 = W333
          matchLabels:
            podAntiAffinityW4: W444
        namespaces:
        - AntiWaaa
        - AntiWbbb
  subdomain: cron
  hostAliases: 1.1.1.1 1.example.com
  # # linux /etc/hosts format string
  # 1.1.1.1 1.example.com
  # # 原生
  # - ip: 5.5.5.5
  #   hostnames:
  #   - 5.example.com
  #   - 55.example.com
  # # linux /etc/hosts format
  # - 1.1.1.1 1.example.com 11.example.com
  # - 2.2.2.2 2.example.com 22.example.com
  # # dict
  #   3.3.3.3:
  #   - 3.example.com
  #   - 33.example.com
  #   4.4.4.4:
  #   - 4.example.com
  #   - 44.example.com
  securityContext:
    fsGroup: 2000
    fsGroupChangePolicy: OnRootMismatch
    runAsGroup: 3000
    runAsNonRoot: true
    runAsUser: 1000
    seLinuxOptions:
      level: s0:c123,c456
      role: default
      type: xxxx
      user: root
    seccompProfile:
      localhostProfile: my-profiles/profile-allow.json
      type: Localhost
    supplementalGroups:
    - 1001
    - 1002
    sysctls: # net.ipv4.ip_forward = 1
    - name: xxx
      value: 123
    - net.ipv4.ip_forward = 0
      # xxx: 321
      # aaa: 111
    windowsOptions:
      gmsaCredentialSpec: 123
      gmsaCredentialSpecName: 333
      hostProcess: true
      runAsUserName: aaa
  tolerations:
  - key: aaa
    operator: Exists
    value: 123
    effect: NoSchedule
    tolerationSeconds: 3600
  - key: bbb
    operator: Equal
    value: 123
    effect: NoExecute
    tolerationSeconds: 3600
  volumes:
    cephfs:name-cephfs:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /
      readOnly: true
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    cephfs-aaa-fff:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /aaa
      readOnly: false
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    cephfs|:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /aaa
      readOnly: false
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    configMap:name-configMap:
      name: cm-config.yaml
      defaultMode: 0644
      items:
      - key: log-level
        mode: 0644
        path: path/to/item/file
      - key: log-level11
        mode: 0644
        path: path/to/item/file
      optional: true
    emptyDir:name-emptyDir:
      medium:
    emptyDir:
      medium: Memory
      sizeLimit: 10Gi
    emptyDiremptyDir:
      medium:
      sizeLimit: 1Gi
    fc:aaa:
      fsType: ext4
      lun: 123
      readOnly: true
      targetWWNs:
      - aaa
    fc:bbb:
      fsType: ext4
      readOnly: true
      wwids:
      - aaa-123
    hostPath:
      path: /data
      type:
    hostPath:name-hostPath:
      path: /data
      type: Directory
    nfs:
      server: nfs.example.com
      path: /data
      readOnly: true
    nfs-aaaaaa:
      server: nfs.example.com
      path: /data
      readOnly: true
    persistentVolumeClaim:
      claimName: claimName1
      readOnly: true
    pvcpvc-123123:
      claimName: 123123
    secret:
      defaultMode: 0644
      items:
      - key: secret-file
        mode: 0644
        path: path/to/item/file
      optional:
      secretName: sssss  # 可用 name 替换，但 secretName 会优先生效
    rbd:  # 使用前需要安装 ceph-common 组件
      fsType: ext4
      image: foo
      keyring: /etc/ceph/keyring
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      pool: rbd
      readOnly: true
      user: admin
    rbdrbd-123123123123:  # 使用前需要安装 ceph-common 组件
      fsType: ext4
      image: foo
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      pool: rbd
      readOnly: true
      secretRef: 123123
      user: admin
  containers:
  - name: container1
    args:
    - aaa
    - bbb
    command:
    - cmd1
    - cmd2
    env:
    - name: name3
      value: value3
    envFiles:
      configs/envs.yaml: CronJob.env
      configs/envs2.yaml: CronJob.env
    envFrom:
      configMapRef:
        name: xxxx
        optional: true
      prefix: xxxx
      secretRef:
        name: xxxxx
        optional: true
    envFromFiles:
      configs/envs.yaml: CronJob.env
      configs/envs2.yaml: CronJob.env
    image: "image:v1"
    imageFiles:
      configs/images.yaml: image1
    imagePullPolicy: "Always"
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
      preStop:
        exec:
          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
    livenessProbe:
      exec:
        command:
        - cat
        - /tmp/healthy
    ports: 80, 81, 82
    # ports:
    # - containerPort: 100
    #   hostIP: 1.1.1.1
    #   hostPort: 100
    #   name: name-ports
    #   protocol: TCP
    resizePolicy:
    - resourceName: "memory"
      restartPolicy: "RestartContainer"
    - name: "cpu"
      policy: "NotRequied"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 1
        memory: 1Gi
    resourcesFiles:
      configs/resources.yaml: requests
    securityContext:
      readOnlyRootFilesystem: true
    readinessProbe:
      tcpSocket:
        port: 8080
      initialDelaySeconds: 15
      periodSeconds: 10
    startupProbe:
      httpGet:
        path: /healthz
        port: liveness-port
      failureThreshold: 30
      periodSeconds: 10
    volumeDevices:
    - devicePath: aaaaa
      name: adfadfad
    - devicePath: aaaaa
      name: adfadfad
    volumeMounts:
    - name: aaaa
      mountPath: path/to/mount/point
    - name: bbbb
      mountPath: path/to/mount/point
    workingDir: path/to/work/dir
  # imagePullPolicy: "IfNotPresent"
# imagePullPolicy: "Never"
#   image: "image:v2"
#   imageFiles:
#     configs/images.yaml: image2
# image: "image:v3"
# imageFiles:
#   configs/images.yaml: image3
    # image:
    #   repository: "image-repository-v1"
    # image:
    #   repository: "image-repository-v2"
    #   tag: "image-tag-v1"
    # image:
    #   repository:
    #     url: cccc
    #     namespace: 333
    #     name: ffff
    #     bbbb: 4
    #     aaaa: 1/2
    #     vvv: 3aa
    #   tag:
    #     project:
    #     commit: 78987
    #     dataCommit:
    #     aaa: aaa
    #     bbb: bbb
    #     ddd: 111
    # image:
    #   repository:
    #   - "aaaaa"
    #   - "ns"
    #   - "cccc"
    #   tag:
    #   - "main_branch"
    #   - "fdssf3sg"
    #   - "r123456"
  initContainers:
  - name: init-c1
    envInitEnabled: true
    env:
    - name: init-name3
      value: init-value3
    envFiles:
      configs/envs.yaml: CronJob.env1
  envFiles:
    configs/envs.yaml: CronJob.env2

DaemonSet:
  helmTesting: true
  helmLabels: true
  name: DaemonSetTest
  nameAlias: DaemonSetTestAlias
  fullname: DaemonSetTestFullName
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      # maxSurge: 10%
      maxUnavailable: 1
  matchExpressions:
  # 基于等值 / 不等值
  - environment = production
  - environment1 == production1
  - tier != frontend
  # 基于集合
  - environment2 in (production2, qa2)
  - tier2 notin (frontend2, backend2)
  - partition
  - "!partition1"
  # 原生
  - key: key
    operator: In  # In/NotIn/Exists/DoesNotExist
    values:
    - value1
    - value2
  annotations:
    validOnly: false  # 特殊变量，不会出现在结果集中。非全局变量配置时生效（此处生效）。
    app.example.com: ds
    cron: ds
  labels:
    xxx: 123
  activeDeadlineSeconds: 10
  automountServiceAccountToken: true
  dnsPolicy: ClusterFirstWithHostNet
  hostname: vm-server-ds
  imagePullSecrets:
  - secret1
  - secret2
  - secret3
  nodeName: node-1
  nodeSelector:
    hostname: node-1
  restartPolicy: Always
  schedulerName: default
  serviceAccountName: default
  hostPID: false
  shareProcessNamespace: false
  terminationGracePeriodSeconds: 0
  nodeAffinity:
    required:
      matchExpressions:
      - nodeAffinity1 = 111
      matchFields:
      - nodeAffinity2 = 222
    preferred:
      weight1:
        matchExpressions:
        - nodeAffinity1 = 111
        matchFields:
        - nodeAffinity2 = 222
  podAffinity:
    required:
      topologyKey: kubernetes.io/hostname
      labelSelector:
        matchExpressions:
        - podAffinity1 = 111
        matchLabels:
          podAffinity2: 222
      namespaceSelector:
        matchExpressions:
        - podAffinity3 = 333
        matchLabels:
          podAffinity4: 444
      namespaces:
      - aaa
      - bbb
    preferred:
      weight1:
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
          - podAffinityW1 = W111
          matchLabels:
            podAffinityW2: W222
        namespaceSelector:
          matchExpressions:
          - podAffinityW3 = W333
          matchLabels:
            podAffinityW4: W444
        namespaces:
        - Waaa
        - Wbbb
  podAntiAffinity:
    required:
      topologyKey: kubernetes.io/hostname
      labelSelector:
        matchExpressions:
        - podAntiAffinity1 = 111
        matchLabels:
          podAntiAffinity2: 222
      namespaceSelector:
        matchExpressions:
        - podAntiAffinity3 = 333
        matchLabels:
          podAntiAffinity4: 444
      namespaces:
      - Antiaaa
      - Antibbb
    preferred:
      weight1:
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchExpressions:
          - podAntiAffinityW1 = W111
          matchLabels:
            podAntiAffinityW2: W222
        namespaceSelector:
          matchExpressions:
          - podAntiAffinityW3 = W333
          matchLabels:
            podAntiAffinityW4: W444
        namespaces:
        - AntiWaaa
        - AntiWbbb
  subdomain: cron
  hostAliases: 1.1.1.1 1.example.com
  # # linux /etc/hosts format string
  # 1.1.1.1 1.example.com
  # # 原生
  # - ip: 5.5.5.5
  #   hostnames:
  #   - 5.example.com
  #   - 55.example.com
  # # linux /etc/hosts format
  # - 1.1.1.1 1.example.com 11.example.com
  # - 2.2.2.2 2.example.com 22.example.com
  # # dict
  #   3.3.3.3:
  #   - 3.example.com
  #   - 33.example.com
  #   4.4.4.4:
  #   - 4.example.com
  #   - 44.example.com
  securityContext:
    fsGroup: 2000
    fsGroupChangePolicy: OnRootMismatch
    runAsGroup: 3000
    runAsNonRoot: true
    runAsUser: 1000
    seLinuxOptions:
      level: s0:c123,c456
      role: default
      type: xxxx
      user: root
    seccompProfile:
      localhostProfile: my-profiles/profile-allow.json
      type: Localhost
    supplementalGroups:
    - 1001
    - 1002
    sysctls: # net.ipv4.ip_forward = 1
    - name: xxx
      value: 123
    - net.ipv4.ip_forward = 0
      # xxx: 321
      # aaa: 111
    windowsOptions:
      gmsaCredentialSpec: 123
      gmsaCredentialSpecName: 333
      hostProcess: true
      runAsUserName: aaa
  tolerations:
  - key: aaa
    operator: Exists
    value: 123
    effect: NoSchedule
    tolerationSeconds: 3600
  - key: bbb
    operator: Equal
    value: 123
    effect: NoExecute
    tolerationSeconds: 3600
  volumes:
    cephfs:name-cephfs:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /
      readOnly: true
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    cephfs-aaa-fff:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /aaa
      readOnly: false
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    cephfs|:
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      path: /aaa
      readOnly: false
      secretFile: /etc/ceph/user.secret
      secretRef: ""
      user: admin
    configMap:name-configMap:
      name: cm-config.yaml
      defaultMode: 0644
      items:
      - key: log-level
        mode: 0644
        path: path/to/item/file
      - key: log-level11
        mode: 0644
        path: path/to/item/file
      optional: true
    emptyDir:name-emptyDir:
      medium:
    emptyDir:
      medium: Memory
      sizeLimit: 10Gi
    emptyDiremptyDir:
      medium:
      sizeLimit: 1Gi
    fc:aaa:
      fsType: ext4
      lun: 123
      readOnly: true
      targetWWNs:
      - aaa
    fc:bbb:
      fsType: ext4
      readOnly: true
      wwids:
      - aaa-123
    hostPath:
      path: /data
      type:
    hostPath:name-hostPath:
      path: /data
      type: Directory
    nfs:
      server: nfs.example.com
      path: /data
      readOnly: true
    nfs-aaaaaa:
      server: nfs.example.com
      path: /data
      readOnly: true
    persistentVolumeClaim:
      claimName: claimName1
      readOnly: true
    pvcpvc-123123:
      claimName: 123123
    secret:
      defaultMode: 0644
      items:
      - key: secret-file
        mode: 0644
        path: path/to/item/file
      optional:
      secretName: sssss  # 可用 name 替换，但 secretName 会优先生效
    rbd:  # 使用前需要安装 ceph-common 组件
      fsType: ext4
      image: foo
      keyring: /etc/ceph/keyring
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      pool: rbd
      readOnly: true
      user: admin
    rbdrbd-123123123123:  # 使用前需要安装 ceph-common 组件
      fsType: ext4
      image: foo
      monitors:
      - 1.1.1.1:6789
      - 1.1.1.2:6789
      - 1.1.1.3:6789
      pool: rbd
      readOnly: true
      secretRef: 123123
      user: admin
  containers:
  - name: container1
    args:
    - aaa
    - bbb
    command:
    - cmd1
    - cmd2
    env:
    - name: name3
      value: value3
    envFiles:
      configs/envs.yaml: CronJob.env
      configs/envs2.yaml: CronJob.env
    envFrom:
      configMapRef:
        name: xxxx
        optional: true
      prefix: xxxx
      secretRef:
        name: xxxxx
        optional: true
    envFromFiles:
      configs/envs.yaml: CronJob.env
      configs/envs2.yaml: CronJob.env
    image: "image:v1"
    imageFiles:
      configs/images.yaml: image1
    imagePullPolicy: "Always"
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
      preStop:
        exec:
          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
    livenessProbe:
      exec:
        command:
        - cat
        - /tmp/healthy
    ports: 80, 81, 82
    # ports:
    # - containerPort: 100
    #   hostIP: 1.1.1.1
    #   hostPort: 100
    #   name: name-ports
    #   protocol: TCP
    resizePolicy:
    - resourceName: "memory"
      restartPolicy: "RestartContainer"
    - name: "cpu"
      policy: "NotRequied"
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 1
        memory: 1Gi
    resourcesFiles:
      configs/resources.yaml: requests
    securityContext:
      readOnlyRootFilesystem: true
    readinessProbe:
      tcpSocket:
        port: 8080
      initialDelaySeconds: 15
      periodSeconds: 10
    startupProbe:
      httpGet:
        path: /healthz
        port: liveness-port
      failureThreshold: 30
      periodSeconds: 10
    volumeDevices:
    - devicePath: aaaaa
      name: adfadfad
    - devicePath: aaaaa
      name: adfadfad
    volumeMounts:
    - name: aaaa
      mountPath: path/to/mount/point
    - name: bbbb
      mountPath: path/to/mount/point
    workingDir: path/to/work/dir
  # imagePullPolicy: "IfNotPresent"
# imagePullPolicy: "Never"
#   image: "image:v2"
#   imageFiles:
#     configs/images.yaml: image2
# image: "image:v3"
# imageFiles:
#   configs/images.yaml: image3
    # image:
    #   repository: "image-repository-v1"
    # image:
    #   repository: "image-repository-v2"
    #   tag: "image-tag-v1"
    # image:
    #   repository:
    #     url: cccc
    #     namespace: 333
    #     name: ffff
    #     bbbb: 4
    #     aaaa: 1/2
    #     vvv: 3aa
    #   tag:
    #     project:
    #     commit: 78987
    #     dataCommit:
    #     aaa: aaa
    #     bbb: bbb
    #     ddd: 111
    # image:
    #   repository:
    #   - "aaaaa"
    #   - "ns"
    #   - "cccc"
    #   tag:
    #   - "main_branch"
    #   - "fdssf3sg"
    #   - "r123456"
  initContainers:
  - name: init-c1
    envInitEnabled: true
    env:
    - name: init-name3
      value: init-value3
    envFiles:
      configs/envs.yaml: CronJob.env1
  envFiles:
    configs/envs.yaml: CronJob.env2
